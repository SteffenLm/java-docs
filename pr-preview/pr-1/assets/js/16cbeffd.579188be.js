"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[1837],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>g});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),u=a,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return r?t.createElement(g,s(s({ref:n},p),{},{components:r})):t.createElement(g,s({ref:n},p))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[m]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2726:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const i={title:"Geschenkesack",description:"",tags:["oo"]},s=void 0,o={unversionedId:"exam-exercises/exam-exercises-java1/gift-bag",id:"exam-exercises/exam-exercises-java1/gift-bag",title:"Geschenkesack",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/gift-bag.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/gift-bag",permalink:"/java-docs/preview-refs/pull/1/merge/exam-exercises/exam-exercises-java1/gift-bag",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/gift-bag.md",tags:[{label:"oo",permalink:"/java-docs/preview-refs/pull/1/merge/tags/oo"}],version:"current",frontMatter:{title:"Geschenkesack",description:"",tags:["oo"]},sidebar:"examExercisesSidebar",previous:{title:"Fast Food",permalink:"/java-docs/preview-refs/pull/1/merge/exam-exercises/exam-exercises-java1/fast-food"},next:{title:"Tiefgarage",permalink:"/java-docs/preview-refs/pull/1/merge/exam-exercises/exam-exercises-java1/parking-garage"}},l={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse GiftBag",id:"hinweise-zur-klasse-giftbag",level:2}],p={toc:c},m="wrapper";function d(e){let{components:n,...r}=e;return(0,a.kt)(m,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine\nausf\xfchrbare Klasse."),(0,a.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,a.kt)("mermaid",{value:"classDiagram\n    GiftBag o-- Present\n    Present o-- Person\n\n    class GiftBag {\n        -presents List~Present~\n        +GiftBag()\n        +addPresent(present Present) void\n        +getMostExpensivePresent() Present\n    }\n\n    class Present {\n        -description String\n        -priceInEuro double\n        -sender Person\n        -recipient Person\n        +Present(description String, priceInEuro double, sender Person, recipient Person)\n    }\n\n    class Person {\n        -name String\n        -age int\n        -gender char\n        +Player(name String, age int, gender char )\n    }"}),(0,a.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"),(0,a.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden")),(0,a.kt)("h2",{id:"hinweise-zur-klasse-giftbag"},"Hinweise zur Klasse GiftBag"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addPresent(present: present)")," soll der Geschenkeliste\n(",(0,a.kt)("inlineCode",{parentName:"li"},"presents"),") das eingehende Geschenk hinzuf\xfcgen"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"Present getMostExpensivePresent()")," soll das teuerste Geschenk\nzur\xfcckgeben")))}d.isMDXComponent=!0}}]);